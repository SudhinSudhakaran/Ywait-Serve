// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXBuildFile section */
		00E356F31AD99517003FC87E /* YwaitServeTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* YwaitServeTests.m */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		16CC876C77A160E50514960C /* libPods-YwaitServe-YwaitServeTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 874650951F94EBE0603CA223 /* libPods-YwaitServe-YwaitServeTests.a */; };
		18E61CD10749B4FD5FEBBC76 /* libPods-YwaitServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 978DCFD288B4EDBEFB5ED49B /* libPods-YwaitServe.a */; };
		3F04EAD1B7AFBAB70035A87B /* libPods-YwaitServe-SkillikzServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B7432C25AA9CC440CDA2B3AA /* libPods-YwaitServe-SkillikzServe.a */; };
		4091FB677493A1D8F456DD85 /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
		4F449CA133454372AEDF6CDB /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		50E3478A7C954672A8A6A56A /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		62D2AB5AA7DF2F2AB90759F1 /* libPods-YwaitServe-YwaitServeDemo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 19BCCD3C96E0F81B002A0C08 /* libPods-YwaitServe-YwaitServeDemo.a */; };
		638F04AABEBD40C1AD02D5E7 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		6B4730924F5E8B0FDE89F435 /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
		7236396DF8B973F43396ACED /* libPods-YwaitServe-PrinceCourtServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 33B25CFA2EF48798E5D4EA32 /* libPods-YwaitServe-PrinceCourtServe.a */; };
		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		83DF1947F4DC587423975715 /* libPods-YwaitServe-AsterServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E9BE254AE270AF728DC1934B /* libPods-YwaitServe-AsterServe.a */; };
		8428E1AB2824D76E00670C94 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		8428E1AC2824D76E00670C94 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		8428E1B02824D76E00670C94 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		8428E1B12824D76E00670C94 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		8428E1B22824D76E00670C94 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		8428E1B32824D76E00670C94 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		8428E1B42824D76E00670C94 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		8428E1B52824D76E00670C94 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		8428E1B62824D76E00670C94 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		8428E1B82824D76E00670C94 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		8428E1B92824D76E00670C94 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		849ECD7C283E11DE00BCA271 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		849ECD7D283E11DE00BCA271 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		849ECD81283E11DE00BCA271 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		849ECD82283E11DE00BCA271 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		849ECD83283E11DE00BCA271 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		849ECD84283E11DE00BCA271 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		849ECD85283E11DE00BCA271 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		849ECD87283E11DE00BCA271 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		849ECD88283E11DE00BCA271 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		849ECD8A283E11DE00BCA271 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		849ECD8B283E11DE00BCA271 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		849ECD98283E1A5800BCA271 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 849ECD96283E1A5800BCA271 /* GoogleService-Info.plist */; };
		84BB2D0B283E4C2900919830 /* SkillikzServe-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8428E1C32824D76F00670C94 /* SkillikzServe-Info.plist */; };
		84BB2D0C283E4C6600919830 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 84E98EAA282C0311007732AE /* GoogleService-Info.plist */; };
		84C98C692850BB590023B0A5 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		84C98C6A2850BB590023B0A5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		84C98C6F2850BB590023B0A5 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		84C98C702850BB590023B0A5 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		84C98C712850BB590023B0A5 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		84C98C722850BB590023B0A5 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		84C98C732850BB590023B0A5 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		84C98C742850BB590023B0A5 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		84C98C752850BB590023B0A5 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		84C98C772850BB590023B0A5 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		84C98C782850BB590023B0A5 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		84C98C8C2850BD040023B0A5 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 84C98C8A2850BD040023B0A5 /* GoogleService-Info.plist */; };
		84D1ABB1282BFEB400450162 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		84D1ABB2282BFEB400450162 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		84D1ABB6282BFEB400450162 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		84D1ABB7282BFEB400450162 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		84D1ABB8282BFEB400450162 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		84D1ABB9282BFEB400450162 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		84D1ABBA282BFEB400450162 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		84D1ABBB282BFEB400450162 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		84D1ABBC282BFEB400450162 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		84D1ABBE282BFEB400450162 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		84D1ABBF282BFEB400450162 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		84E98EAC282C0674007732AE /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = FAD2959D27BE7AAE0018EFC1 /* GoogleService-Info.plist */; };
		84FC76D92824DCE600411C2D /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 84FC76D82824DCE600411C2D /* GoogleService-Info.plist */; };
		8E41613F2995199300B815B5 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		8E4161402995199300B815B5 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		8E4161452995199300B815B5 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		8E4161462995199300B815B5 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		8E4161472995199300B815B5 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		8E4161482995199300B815B5 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		8E41614A2995199300B815B5 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		8E41614B2995199300B815B5 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		8E41614C2995199300B815B5 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		8E41614D2995199300B815B5 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		8E41614E2995199300B815B5 /* YwaitServeDemo-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 84C98C8D2850BD650023B0A5 /* YwaitServeDemo-Info.plist */; };
		8E41614F2995199300B815B5 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		8E41615E2995202800B815B5 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8E41615929951FD100B815B5 /* GoogleService-Info.plist */; };
		8E416160299524BA00B815B5 /* YwaitServicesServe-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8E41615A29951FD100B815B5 /* YwaitServicesServe-Info.plist */; };
		8E60D93228DC4B7500F9A92F /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8E60D93128DC4B7500F9A92F /* GoogleService-Info.plist */; };
		8E96A1D029250E5000777907 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		8E96A1D129250E5000777907 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		8E96A1D729250E5000777907 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		8E96A1D829250E5000777907 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		8E96A1D929250E5000777907 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		8E96A1DA29250E5000777907 /* AsterServeLaunch Screen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 8EB8159B28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard */; };
		8E96A1DB29250E5000777907 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		8E96A1DC29250E5000777907 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		8E96A1DD29250E5000777907 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		8E96A1DE29250E5000777907 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		8E96A1DF29250E5000777907 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		8E96A1EE2925138700777907 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8E96A1EC2925138700777907 /* GoogleService-Info.plist */; };
		8E96A1EF2925138700777907 /* AlNoorServe-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8E96A1ED2925138700777907 /* AlNoorServe-Info.plist */; };
		8E96A1F1292518FE00777907 /* AlNoorServeLaunch Screen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 8E96A1F0292518FE00777907 /* AlNoorServeLaunch Screen.storyboard */; };
		8EB8157C28D5D5BF00AA8612 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		8EB8157D28D5D5BF00AA8612 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		8EB8158228D5D5BF00AA8612 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		8EB8158328D5D5BF00AA8612 /* FuturaPTDemi.otf in Resources */ = {isa = PBXBuildFile; fileRef = D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */; };
		8EB8158428D5D5BF00AA8612 /* FuturaPTLight.otf in Resources */ = {isa = PBXBuildFile; fileRef = 99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */; };
		8EB8158628D5D5BF00AA8612 /* FuturaPTMedium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */; };
		8EB8158828D5D5BF00AA8612 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		8EB8158928D5D5BF00AA8612 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		8EB8158A28D5D5BF00AA8612 /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		8EB8158B28D5D5BF00AA8612 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
		8EB8159A28D5D89C00AA8612 /* AsterServe-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 8EB8159828D5D89C00AA8612 /* AsterServe-Info.plist */; };
		8EB8159C28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 8EB8159B28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard */; };
		97F9C5252AB14CB3BA759251 /* Gibson-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */; };
		9C60794A77F447FE833FFA8E /* Gibson-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */; };
		A18EC986AA1A0F386B481A26 /* libPods-YwaitServe-AdventaServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DC589809E12D2EE49F2C93DD /* libPods-YwaitServe-AdventaServe.a */; };
		A5F0250EABF74C27BF86D001 /* Gibson-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */; };
		D00580F890941B2CC405104A /* libPods-YwaitServe-AlNoorServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A5E8C2F0FC6CAC425A5563DE /* libPods-YwaitServe-AlNoorServe.a */; };
		D3E52F345E0399BFA64CC476 /* libPods-YwaitServe-YwaitServicesServe.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A5AF356EF8623CF61C87617F /* libPods-YwaitServe-YwaitServicesServe.a */; };
		DBE6FF17DD3EB61100058B2C /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
		DC5703A645412669139DD84A /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
		FD989332A0E5494CA6ECD386 /* Gibson-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
			remoteInfo = YwaitServe;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		8EC5A7E928DCB288004A8EBC /* Embed Foundation Extensions */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 13;
			files = (
			);
			name = "Embed Foundation Extensions";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		00E356EE1AD99517003FC87E /* YwaitServeTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = YwaitServeTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* YwaitServeTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = YwaitServeTests.m; sourceTree = "<group>"; };
		03F874D4F7914E34BBBFB44E /* AntDesign.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = AntDesign.ttf; path = "../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf"; sourceTree = "<group>"; };
		0496FDFB58FDAE7BEF6A2BDA /* Pods-YwaitServe-PrinceCourtServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-PrinceCourtServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe.debug.xcconfig"; sourceTree = "<group>"; };
		0CD9C929F4283B8BE5E7D00B /* Pods-YwaitServe-YwaitServicesServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServicesServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe.debug.xcconfig"; sourceTree = "<group>"; };
		0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Gibson-Regular.ttf"; path = "../src/assets/fonts/Gibson/Gibson-Regular.ttf"; sourceTree = "<group>"; };
		0F08F4B31C3D4511B2B66247 /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
		0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Gibson-Bold.ttf"; path = "../src/assets/fonts/Gibson/Gibson-Bold.ttf"; sourceTree = "<group>"; };
		0FE9CBBF16A4C61A02748E02 /* Pods-YwaitServe-YwaitServicesServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServicesServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe.release.xcconfig"; sourceTree = "<group>"; };
		13B07F961A680F5B00A75B9A /* YwaitServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = YwaitServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = YwaitServe/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.mm; path = YwaitServe/AppDelegate.mm; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = YwaitServe/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = YwaitServe/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = YwaitServe/main.m; sourceTree = "<group>"; };
		19BCCD3C96E0F81B002A0C08 /* libPods-YwaitServe-YwaitServeDemo.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-YwaitServeDemo.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		1F83710D4C9A43FB959B16EB /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
		1FED7C8CCE4A48899D90C57D /* MaterialCommunityIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialCommunityIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf"; sourceTree = "<group>"; };
		2217BD70E912F54BB30CF34A /* Pods-YwaitServe-AdventaServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AdventaServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe.debug.xcconfig"; sourceTree = "<group>"; };
		22515B7A68A70CE579006CBF /* Pods-YwaitServe-YwaitServeTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServeTests.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests.release.xcconfig"; sourceTree = "<group>"; };
		23FC025150D859098A1318DC /* Pods-YwaitServe-AdventServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AdventServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AdventServe/Pods-YwaitServe-AdventServe.debug.xcconfig"; sourceTree = "<group>"; };
		2B6A4CD5D4AA86B536335BD6 /* Pods-YwaitServe-AsterServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AsterServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe.debug.xcconfig"; sourceTree = "<group>"; };
		31A5D56C7F92452EB528974B /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
		31C563900CFAC87659FC3AE4 /* Pods-YwaitServe-YwaitServeDemo.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServeDemo.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo.release.xcconfig"; sourceTree = "<group>"; };
		32CBBC8FD87C432AB2997324 /* Fontisto.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Fontisto.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf"; sourceTree = "<group>"; };
		33B25CFA2EF48798E5D4EA32 /* libPods-YwaitServe-PrinceCourtServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-PrinceCourtServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		42E73606BFE64F9C89773B5B /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
		4ED4316C79EF44DBB7D606F4 /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
		5A1025E482B8497595EBBCE1 /* MaterialIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf"; sourceTree = "<group>"; };
		5D872308239F1D15ACCC055C /* Pods-YwaitServe-PrinceCourtServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-PrinceCourtServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe.release.xcconfig"; sourceTree = "<group>"; };
		62ECBB11538F4053A295EF50 /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
		700F551D844A3743B10D3296 /* Pods-YwaitServe-AlNoorServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AlNoorServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe.release.xcconfig"; sourceTree = "<group>"; };
		756AE7C95AD2F31163ECCC89 /* Pods-YwaitServe-AlNoorServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AlNoorServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe.debug.xcconfig"; sourceTree = "<group>"; };
		7CF13CE16DEE4CBABB73DD3E /* Octicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Octicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Octicons.ttf"; sourceTree = "<group>"; };
		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = YwaitServe/LaunchScreen.storyboard; sourceTree = "<group>"; };
		8428E1C22824D76E00670C94 /* SkillikzServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = SkillikzServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		8428E1C32824D76F00670C94 /* SkillikzServe-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "SkillikzServe-Info.plist"; path = "/Users/admin/Documents/Works/Vijin/Reactnative/Projects/CLI/YwaitServeRN/Git/Source/YwaitServeRN/ios/SkillikzServe-Info.plist"; sourceTree = "<absolute>"; };
		849ECD92283E11DE00BCA271 /* AdventaServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = AdventaServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		849ECD95283E1A5800BCA271 /* AdventServe-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "AdventServe-Info.plist"; sourceTree = "<group>"; };
		849ECD96283E1A5800BCA271 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		84C98C812850BB590023B0A5 /* YwaitServeDemo.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = YwaitServeDemo.app; sourceTree = BUILT_PRODUCTS_DIR; };
		84C98C8A2850BD040023B0A5 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		84C98C8D2850BD650023B0A5 /* YwaitServeDemo-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "YwaitServeDemo-Info.plist"; sourceTree = "<group>"; };
		84D1ABC8282BFEB400450162 /* PrinceCourtServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = PrinceCourtServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		84D1ABCB282C003900450162 /* PrinceCourtServe-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "PrinceCourtServe-Info.plist"; sourceTree = "<group>"; };
		84E98EAA282C0311007732AE /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		84FC76D82824DCE600411C2D /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		8651D507FEF77AEDC4758554 /* Pods-YwaitServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe/Pods-YwaitServe.debug.xcconfig"; sourceTree = "<group>"; };
		874650951F94EBE0603CA223 /* libPods-YwaitServe-YwaitServeTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-YwaitServeTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		87D8177AF84CE0D6251A35D4 /* Pods-YwaitServe-AsterServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AsterServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe.release.xcconfig"; sourceTree = "<group>"; };
		8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Gibson-SemiBold.ttf"; path = "../src/assets/fonts/Gibson/Gibson-SemiBold.ttf"; sourceTree = "<group>"; };
		8E4161562995199300B815B5 /* YwaitServicesServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = YwaitServicesServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		8E41615929951FD100B815B5 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		8E41615A29951FD100B815B5 /* YwaitServicesServe-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "YwaitServicesServe-Info.plist"; path = "YwaitServicesServe/YwaitServicesServe-Info.plist"; sourceTree = SOURCE_ROOT; };
		8E60D93128DC4B7500F9A92F /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "AsterServe/GoogleService-Info.plist"; sourceTree = SOURCE_ROOT; };
		8E60D93328DC4CEC00F9A92F /* GoogleService-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "AsterServe/GoogleService-Info.plist"; sourceTree = "<group>"; };
		8E7A98761E5931396AF5F3BF /* Pods-YwaitServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe/Pods-YwaitServe.release.xcconfig"; sourceTree = "<group>"; };
		8E96A1E629250E5000777907 /* AlNoorServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = AlNoorServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		8E96A1EC2925138700777907 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "AlNoorServe/GoogleService-Info.plist"; sourceTree = "<group>"; };
		8E96A1ED2925138700777907 /* AlNoorServe-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "AlNoorServe-Info.plist"; path = "AlNoorServe/AlNoorServe-Info.plist"; sourceTree = "<group>"; };
		8E96A1F0292518FE00777907 /* AlNoorServeLaunch Screen.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "AlNoorServeLaunch Screen.storyboard"; sourceTree = "<group>"; };
		8EB8159228D5D5BF00AA8612 /* AsterServe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = AsterServe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		8EB8159828D5D89C00AA8612 /* AsterServe-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "AsterServe-Info.plist"; sourceTree = "<group>"; };
		8EB8159B28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = "AsterServeLaunch Screen.storyboard"; sourceTree = "<group>"; };
		8EC5A7E028DCB287004A8EBC /* LocationPushService.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LocationPushService.swift; sourceTree = "<group>"; };
		8EC5A7E228DCB287004A8EBC /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		978DCFD288B4EDBEFB5ED49B /* libPods-YwaitServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FuturaPTLight.otf; path = ../src/assets/fonts/FuturaPT/FuturaPTLight.otf; sourceTree = "<group>"; };
		9AE961AE040649048D4C958E /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
		A5AF356EF8623CF61C87617F /* libPods-YwaitServe-YwaitServicesServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-YwaitServicesServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		A5E8C2F0FC6CAC425A5563DE /* libPods-YwaitServe-AlNoorServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-AlNoorServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		A7DEB930DBE58F27FF3EDFFF /* Pods-YwaitServe-AdventaServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AdventaServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe.release.xcconfig"; sourceTree = "<group>"; };
		B09666E1863B3DC64332C4BD /* Pods-YwaitServe-SkillikzServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-SkillikzServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe.release.xcconfig"; sourceTree = "<group>"; };
		B7432C25AA9CC440CDA2B3AA /* libPods-YwaitServe-SkillikzServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-SkillikzServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Gibson-Light.ttf"; path = "../src/assets/fonts/Gibson/Gibson-Light.ttf"; sourceTree = "<group>"; };
		BE5837A6F0034DE5A2AF2AEA /* FontAwesome5_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf"; sourceTree = "<group>"; };
		C1D1CE2BA5DDF5D804B7D5E8 /* Pods-YwaitServe-YwaitServeTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServeTests.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests.debug.xcconfig"; sourceTree = "<group>"; };
		C70903A881C1EC4C113F71D4 /* Pods-YwaitServe-SkillikzServe.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-SkillikzServe.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe.debug.xcconfig"; sourceTree = "<group>"; };
		D0ADF7233E84FF0DCE557C0A /* Pods-YwaitServe-YwaitServeDemo.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-YwaitServeDemo.debug.xcconfig"; path = "Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo.debug.xcconfig"; sourceTree = "<group>"; };
		D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FuturaPTMedium.otf; path = ../src/assets/fonts/FuturaPT/FuturaPTMedium.otf; sourceTree = "<group>"; };
		D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FuturaPTDemi.otf; path = ../src/assets/fonts/FuturaPT/FuturaPTDemi.otf; sourceTree = "<group>"; };
		D4F7659D88D0406FBB3E2240 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
		DA6EB36CA8EB4991826BCB60 /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
		DC589809E12D2EE49F2C93DD /* libPods-YwaitServe-AdventaServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-AdventaServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		E00BA71D74FB62603B54CE4D /* Pods-YwaitServe-AdventServe.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-YwaitServe-AdventServe.release.xcconfig"; path = "Target Support Files/Pods-YwaitServe-AdventServe/Pods-YwaitServe-AdventServe.release.xcconfig"; sourceTree = "<group>"; };
		E9BE254AE270AF728DC1934B /* libPods-YwaitServe-AsterServe.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-YwaitServe-AsterServe.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		EEC6631F77A64BD7B4C31D79 /* Foundation.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Foundation.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Foundation.ttf"; sourceTree = "<group>"; };
		FAD2959D27BE7AAE0018EFC1 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "YwaitServe/GoogleService-Info.plist"; sourceTree = "<group>"; };
		FAD2959F27BE7ABA0018EFC1 /* YwaitServe.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = YwaitServe.entitlements; path = YwaitServe/YwaitServe.entitlements; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		00E356EB1AD99517003FC87E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				16CC876C77A160E50514960C /* libPods-YwaitServe-YwaitServeTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DC5703A645412669139DD84A /* BuildFile in Frameworks */,
				18E61CD10749B4FD5FEBBC76 /* libPods-YwaitServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8428E1AD2824D76E00670C94 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3F04EAD1B7AFBAB70035A87B /* libPods-YwaitServe-SkillikzServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		849ECD7E283E11DE00BCA271 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A18EC986AA1A0F386B481A26 /* libPods-YwaitServe-AdventaServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84C98C6B2850BB590023B0A5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4091FB677493A1D8F456DD85 /* BuildFile in Frameworks */,
				6B4730924F5E8B0FDE89F435 /* BuildFile in Frameworks */,
				62D2AB5AA7DF2F2AB90759F1 /* libPods-YwaitServe-YwaitServeDemo.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84D1ABB3282BFEB400450162 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7236396DF8B973F43396ACED /* libPods-YwaitServe-PrinceCourtServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E4161412995199300B815B5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D3E52F345E0399BFA64CC476 /* libPods-YwaitServe-YwaitServicesServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E96A1D229250E5000777907 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D00580F890941B2CC405104A /* libPods-YwaitServe-AlNoorServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8EB8157E28D5D5BF00AA8612 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DBE6FF17DD3EB61100058B2C /* BuildFile in Frameworks */,
				83DF1947F4DC587423975715 /* libPods-YwaitServe-AsterServe.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* YwaitServeTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* YwaitServeTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = YwaitServeTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		0AFEE23E8DA14987B500FC5B /* Resources */ = {
			isa = PBXGroup;
			children = (
				D466DAF7BCC144BCAEAB2D3E /* FuturaPTDemi.otf */,
				99FAEA00C2A848F88E323107 /* FuturaPTLight.otf */,
				D1EC1EE555B549A082603866 /* FuturaPTMedium.otf */,
				0F93D366B2BF4AE4AE0F035E /* Gibson-Bold.ttf */,
				B762D26C305C4FA28B7E7BF2 /* Gibson-Light.ttf */,
				0E5C08FB038648BA822852CF /* Gibson-Regular.ttf */,
				8A1D3BEA99AC4ACFA10FEFCF /* Gibson-SemiBold.ttf */,
				03F874D4F7914E34BBBFB44E /* AntDesign.ttf */,
				1F83710D4C9A43FB959B16EB /* Entypo.ttf */,
				D4F7659D88D0406FBB3E2240 /* EvilIcons.ttf */,
				4ED4316C79EF44DBB7D606F4 /* Feather.ttf */,
				0F08F4B31C3D4511B2B66247 /* FontAwesome.ttf */,
				BE5837A6F0034DE5A2AF2AEA /* FontAwesome5_Brands.ttf */,
				42E73606BFE64F9C89773B5B /* FontAwesome5_Regular.ttf */,
				62ECBB11538F4053A295EF50 /* FontAwesome5_Solid.ttf */,
				32CBBC8FD87C432AB2997324 /* Fontisto.ttf */,
				EEC6631F77A64BD7B4C31D79 /* Foundation.ttf */,
				DA6EB36CA8EB4991826BCB60 /* Ionicons.ttf */,
				1FED7C8CCE4A48899D90C57D /* MaterialCommunityIcons.ttf */,
				5A1025E482B8497595EBBCE1 /* MaterialIcons.ttf */,
				7CF13CE16DEE4CBABB73DD3E /* Octicons.ttf */,
				31A5D56C7F92452EB528974B /* SimpleLineIcons.ttf */,
				9AE961AE040649048D4C958E /* Zocial.ttf */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* YwaitServe */ = {
			isa = PBXGroup;
			children = (
				8E41615829951FD100B815B5 /* YwaitServicesServe */,
				8E96A1EB2925120F00777907 /* AlNoorServe */,
				8EB8159628D5D89C00AA8612 /* AsterServe */,
				84C98C882850BD040023B0A5 /* YwaitServeDemo */,
				849ECD94283E1A5800BCA271 /* AdventaServe */,
				84D1ABCA282C003900450162 /* PrinceCourtServe */,
				8428E1C42824D7DB00670C94 /* SkillikzServe */,
				FAD2959F27BE7ABA0018EFC1 /* YwaitServe.entitlements */,
				FAD2959D27BE7AAE0018EFC1 /* GoogleService-Info.plist */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.mm */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
				13B07FB71A68108700A75B9A /* main.m */,
			);
			name = YwaitServe;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				874650951F94EBE0603CA223 /* libPods-YwaitServe-YwaitServeTests.a */,
				33B25CFA2EF48798E5D4EA32 /* libPods-YwaitServe-PrinceCourtServe.a */,
				B7432C25AA9CC440CDA2B3AA /* libPods-YwaitServe-SkillikzServe.a */,
				978DCFD288B4EDBEFB5ED49B /* libPods-YwaitServe.a */,
				DC589809E12D2EE49F2C93DD /* libPods-YwaitServe-AdventaServe.a */,
				A5E8C2F0FC6CAC425A5563DE /* libPods-YwaitServe-AlNoorServe.a */,
				E9BE254AE270AF728DC1934B /* libPods-YwaitServe-AsterServe.a */,
				A5AF356EF8623CF61C87617F /* libPods-YwaitServe-YwaitServicesServe.a */,
				19BCCD3C96E0F81B002A0C08 /* libPods-YwaitServe-YwaitServeDemo.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				8E60D93328DC4CEC00F9A92F /* GoogleService-Info.plist */,
				13B07FAE1A68108700A75B9A /* YwaitServe */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				00E356EF1AD99517003FC87E /* YwaitServeTests */,
				8EC5A7DF28DCB287004A8EBC /* pp */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				E947EBF2A646C44C6F4DB53B /* Pods */,
				0AFEE23E8DA14987B500FC5B /* Resources */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* YwaitServe.app */,
				00E356EE1AD99517003FC87E /* YwaitServeTests.xctest */,
				8428E1C22824D76E00670C94 /* SkillikzServe.app */,
				84D1ABC8282BFEB400450162 /* PrinceCourtServe.app */,
				849ECD92283E11DE00BCA271 /* AdventaServe.app */,
				84C98C812850BB590023B0A5 /* YwaitServeDemo.app */,
				8EB8159228D5D5BF00AA8612 /* AsterServe.app */,
				8E96A1E629250E5000777907 /* AlNoorServe.app */,
				8E4161562995199300B815B5 /* YwaitServicesServe.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		8428E1C42824D7DB00670C94 /* SkillikzServe */ = {
			isa = PBXGroup;
			children = (
				8428E1C32824D76F00670C94 /* SkillikzServe-Info.plist */,
				84FC76D82824DCE600411C2D /* GoogleService-Info.plist */,
			);
			name = SkillikzServe;
			sourceTree = "<group>";
		};
		849ECD94283E1A5800BCA271 /* AdventaServe */ = {
			isa = PBXGroup;
			children = (
				849ECD95283E1A5800BCA271 /* AdventServe-Info.plist */,
				849ECD96283E1A5800BCA271 /* GoogleService-Info.plist */,
			);
			path = AdventaServe;
			sourceTree = SOURCE_ROOT;
		};
		84C98C882850BD040023B0A5 /* YwaitServeDemo */ = {
			isa = PBXGroup;
			children = (
				84C98C8D2850BD650023B0A5 /* YwaitServeDemo-Info.plist */,
				84C98C8A2850BD040023B0A5 /* GoogleService-Info.plist */,
			);
			path = YwaitServeDemo;
			sourceTree = "<group>";
		};
		84D1ABCA282C003900450162 /* PrinceCourtServe */ = {
			isa = PBXGroup;
			children = (
				84E98EAA282C0311007732AE /* GoogleService-Info.plist */,
				84D1ABCB282C003900450162 /* PrinceCourtServe-Info.plist */,
			);
			path = PrinceCourtServe;
			sourceTree = "<group>";
		};
		8E41615829951FD100B815B5 /* YwaitServicesServe */ = {
			isa = PBXGroup;
			children = (
				8E41615929951FD100B815B5 /* GoogleService-Info.plist */,
				8E41615A29951FD100B815B5 /* YwaitServicesServe-Info.plist */,
			);
			path = YwaitServicesServe;
			sourceTree = "<group>";
		};
		8E96A1EB2925120F00777907 /* AlNoorServe */ = {
			isa = PBXGroup;
			children = (
				8E96A1ED2925138700777907 /* AlNoorServe-Info.plist */,
				8E96A1EC2925138700777907 /* GoogleService-Info.plist */,
				8E96A1F0292518FE00777907 /* AlNoorServeLaunch Screen.storyboard */,
			);
			name = AlNoorServe;
			sourceTree = "<group>";
		};
		8EB8159628D5D89C00AA8612 /* AsterServe */ = {
			isa = PBXGroup;
			children = (
				8E60D93128DC4B7500F9A92F /* GoogleService-Info.plist */,
				8EB8159828D5D89C00AA8612 /* AsterServe-Info.plist */,
				8EB8159B28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard */,
			);
			path = AsterServe;
			sourceTree = "<group>";
		};
		8EC5A7DF28DCB287004A8EBC /* pp */ = {
			isa = PBXGroup;
			children = (
				8EC5A7E028DCB287004A8EBC /* LocationPushService.swift */,
				8EC5A7E228DCB287004A8EBC /* Info.plist */,
			);
			path = pp;
			sourceTree = "<group>";
		};
		E947EBF2A646C44C6F4DB53B /* Pods */ = {
			isa = PBXGroup;
			children = (
				C1D1CE2BA5DDF5D804B7D5E8 /* Pods-YwaitServe-YwaitServeTests.debug.xcconfig */,
				22515B7A68A70CE579006CBF /* Pods-YwaitServe-YwaitServeTests.release.xcconfig */,
				C70903A881C1EC4C113F71D4 /* Pods-YwaitServe-SkillikzServe.debug.xcconfig */,
				B09666E1863B3DC64332C4BD /* Pods-YwaitServe-SkillikzServe.release.xcconfig */,
				0496FDFB58FDAE7BEF6A2BDA /* Pods-YwaitServe-PrinceCourtServe.debug.xcconfig */,
				5D872308239F1D15ACCC055C /* Pods-YwaitServe-PrinceCourtServe.release.xcconfig */,
				23FC025150D859098A1318DC /* Pods-YwaitServe-AdventServe.debug.xcconfig */,
				E00BA71D74FB62603B54CE4D /* Pods-YwaitServe-AdventServe.release.xcconfig */,
				2217BD70E912F54BB30CF34A /* Pods-YwaitServe-AdventaServe.debug.xcconfig */,
				A7DEB930DBE58F27FF3EDFFF /* Pods-YwaitServe-AdventaServe.release.xcconfig */,
				8651D507FEF77AEDC4758554 /* Pods-YwaitServe.debug.xcconfig */,
				8E7A98761E5931396AF5F3BF /* Pods-YwaitServe.release.xcconfig */,
				D0ADF7233E84FF0DCE557C0A /* Pods-YwaitServe-YwaitServeDemo.debug.xcconfig */,
				31C563900CFAC87659FC3AE4 /* Pods-YwaitServe-YwaitServeDemo.release.xcconfig */,
				2B6A4CD5D4AA86B536335BD6 /* Pods-YwaitServe-AsterServe.debug.xcconfig */,
				87D8177AF84CE0D6251A35D4 /* Pods-YwaitServe-AsterServe.release.xcconfig */,
				756AE7C95AD2F31163ECCC89 /* Pods-YwaitServe-AlNoorServe.debug.xcconfig */,
				700F551D844A3743B10D3296 /* Pods-YwaitServe-AlNoorServe.release.xcconfig */,
				0CD9C929F4283B8BE5E7D00B /* Pods-YwaitServe-YwaitServicesServe.debug.xcconfig */,
				0FE9CBBF16A4C61A02748E02 /* Pods-YwaitServe-YwaitServicesServe.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00E356ED1AD99517003FC87E /* YwaitServeTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "YwaitServeTests" */;
			buildPhases = (
				84A900056343E649610907C6 /* [CP] Check Pods Manifest.lock */,
				00E356EA1AD99517003FC87E /* Sources */,
				00E356EB1AD99517003FC87E /* Frameworks */,
				00E356EC1AD99517003FC87E /* Resources */,
				5D8943F32A5149EEE2C40D57 /* [CP] Embed Pods Frameworks */,
				92A0EF622B722C294E91A91A /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				00E356F51AD99517003FC87E /* PBXTargetDependency */,
			);
			name = YwaitServeTests;
			productName = YwaitServeTests;
			productReference = 00E356EE1AD99517003FC87E /* YwaitServeTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		13B07F861A680F5B00A75B9A /* YwaitServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "YwaitServe" */;
			buildPhases = (
				CFDE20BE9B5F8E97EC7443DE /* [CP] Check Pods Manifest.lock */,
				FD10A7F022414F080027D42C /* Start Packager */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				1BEC3827995C7054CCF00120 /* [CP] Embed Pods Frameworks */,
				103F797F1328741CF363ED1A /* [CP] Copy Pods Resources */,
				0AE2A575F0F33C0843EB5BE8 /* [CP-User] [RNFB] Core Configuration */,
				FBCE7694DDC5DCB1EE35C404 /* [CP-User] [RNFB] Crashlytics Configuration */,
				8EC5A7E928DCB288004A8EBC /* Embed Foundation Extensions */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = YwaitServe;
			productName = YwaitServe;
			productReference = 13B07F961A680F5B00A75B9A /* YwaitServe.app */;
			productType = "com.apple.product-type.application";
		};
		8428E1A72824D76E00670C94 /* SkillikzServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8428E1BF2824D76E00670C94 /* Build configuration list for PBXNativeTarget "SkillikzServe" */;
			buildPhases = (
				8428E1A82824D76E00670C94 /* [CP] Check Pods Manifest.lock */,
				8428E1A92824D76E00670C94 /* Start Packager */,
				8428E1AA2824D76E00670C94 /* Sources */,
				8428E1AD2824D76E00670C94 /* Frameworks */,
				8428E1AF2824D76E00670C94 /* Resources */,
				8428E1BA2824D76E00670C94 /* Bundle React Native code and images */,
				8428E1BB2824D76E00670C94 /* [CP] Embed Pods Frameworks */,
				8428E1BC2824D76E00670C94 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SkillikzServe;
			productName = YwaitServe;
			productReference = 8428E1C22824D76E00670C94 /* SkillikzServe.app */;
			productType = "com.apple.product-type.application";
		};
		849ECD78283E11DE00BCA271 /* AdventaServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 849ECD8F283E11DE00BCA271 /* Build configuration list for PBXNativeTarget "AdventaServe" */;
			buildPhases = (
				4A8B72EABE036E3A40D05198 /* [CP] Check Pods Manifest.lock */,
				849ECD7A283E11DE00BCA271 /* Start Packager */,
				849ECD7B283E11DE00BCA271 /* Sources */,
				849ECD7E283E11DE00BCA271 /* Frameworks */,
				849ECD80283E11DE00BCA271 /* Resources */,
				849ECD8C283E11DE00BCA271 /* Bundle React Native code and images */,
				D86FC5B1BB02CE5A4E652B7D /* [CP] Embed Pods Frameworks */,
				04035A10897249A934DAA88C /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = AdventaServe;
			productName = YwaitServe;
			productReference = 849ECD92283E11DE00BCA271 /* AdventaServe.app */;
			productType = "com.apple.product-type.application";
		};
		84C98C652850BB590023B0A5 /* YwaitServeDemo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 84C98C7E2850BB590023B0A5 /* Build configuration list for PBXNativeTarget "YwaitServeDemo" */;
			buildPhases = (
				9A233F99518EC2BA9CAC8BE9 /* [CP] Check Pods Manifest.lock */,
				84C98C672850BB590023B0A5 /* Start Packager */,
				84C98C682850BB590023B0A5 /* Sources */,
				84C98C6B2850BB590023B0A5 /* Frameworks */,
				84C98C6E2850BB590023B0A5 /* Resources */,
				84C98C792850BB590023B0A5 /* Bundle React Native code and images */,
				05B1F93F5A81C79B537B7A20 /* [CP] Embed Pods Frameworks */,
				5C3E8EF3E37CF109B455F9B8 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = YwaitServeDemo;
			productName = YwaitServe;
			productReference = 84C98C812850BB590023B0A5 /* YwaitServeDemo.app */;
			productType = "com.apple.product-type.application";
		};
		84D1ABAD282BFEB400450162 /* PrinceCourtServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 84D1ABC5282BFEB400450162 /* Build configuration list for PBXNativeTarget "PrinceCourtServe" */;
			buildPhases = (
				84D1ABAE282BFEB400450162 /* [CP] Check Pods Manifest.lock */,
				84D1ABAF282BFEB400450162 /* Start Packager */,
				84D1ABB0282BFEB400450162 /* Sources */,
				84D1ABB3282BFEB400450162 /* Frameworks */,
				84D1ABB5282BFEB400450162 /* Resources */,
				84D1ABC0282BFEB400450162 /* Bundle React Native code and images */,
				84D1ABC1282BFEB400450162 /* [CP] Embed Pods Frameworks */,
				84D1ABC2282BFEB400450162 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = PrinceCourtServe;
			productName = YwaitServe;
			productReference = 84D1ABC8282BFEB400450162 /* PrinceCourtServe.app */;
			productType = "com.apple.product-type.application";
		};
		8E41613B2995199300B815B5 /* YwaitServicesServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8E4161532995199300B815B5 /* Build configuration list for PBXNativeTarget "YwaitServicesServe" */;
			buildPhases = (
				8E41613C2995199300B815B5 /* [CP] Check Pods Manifest.lock */,
				8E41613D2995199300B815B5 /* Start Packager */,
				8E41613E2995199300B815B5 /* Sources */,
				8E4161412995199300B815B5 /* Frameworks */,
				8E4161442995199300B815B5 /* Resources */,
				8E4161502995199300B815B5 /* Bundle React Native code and images */,
				8E4161512995199300B815B5 /* [CP] Embed Pods Frameworks */,
				8E4161522995199300B815B5 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = YwaitServicesServe;
			productName = YwaitServe;
			productReference = 8E4161562995199300B815B5 /* YwaitServicesServe.app */;
			productType = "com.apple.product-type.application";
		};
		8E96A1CC29250E5000777907 /* AlNoorServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8E96A1E329250E5000777907 /* Build configuration list for PBXNativeTarget "AlNoorServe" */;
			buildPhases = (
				8E96A1CD29250E5000777907 /* [CP] Check Pods Manifest.lock */,
				8E96A1CE29250E5000777907 /* Start Packager */,
				8E96A1CF29250E5000777907 /* Sources */,
				8E96A1D229250E5000777907 /* Frameworks */,
				8E96A1D429250E5000777907 /* Resources */,
				8E96A1E029250E5000777907 /* Bundle React Native code and images */,
				8E96A1E129250E5000777907 /* [CP] Embed Pods Frameworks */,
				8E96A1E229250E5000777907 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = AlNoorServe;
			productName = YwaitServe;
			productReference = 8E96A1E629250E5000777907 /* AlNoorServe.app */;
			productType = "com.apple.product-type.application";
		};
		8EB8157828D5D5BF00AA8612 /* AsterServe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8EB8158F28D5D5BF00AA8612 /* Build configuration list for PBXNativeTarget "AsterServe" */;
			buildPhases = (
				8EB8157928D5D5BF00AA8612 /* [CP] Check Pods Manifest.lock */,
				8EB8157A28D5D5BF00AA8612 /* Start Packager */,
				8EB8157B28D5D5BF00AA8612 /* Sources */,
				8EB8157E28D5D5BF00AA8612 /* Frameworks */,
				8EB8158028D5D5BF00AA8612 /* Resources */,
				8EB8158C28D5D5BF00AA8612 /* Bundle React Native code and images */,
				8EB8158D28D5D5BF00AA8612 /* [CP] Embed Pods Frameworks */,
				8EB8158E28D5D5BF00AA8612 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = AsterServe;
			productName = YwaitServe;
			productReference = 8EB8159228D5D5BF00AA8612 /* AsterServe.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1400;
				LastUpgradeCheck = 1420;
				TargetAttributes = {
					00E356ED1AD99517003FC87E = {
						CreatedOnToolsVersion = 6.2;
						TestTargetID = 13B07F861A680F5B00A75B9A;
					};
					13B07F861A680F5B00A75B9A = {
						LastSwiftMigration = 1120;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "YwaitServe" */;
			compatibilityVersion = "Xcode 12.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* YwaitServe */,
				00E356ED1AD99517003FC87E /* YwaitServeTests */,
				8428E1A72824D76E00670C94 /* SkillikzServe */,
				84D1ABAD282BFEB400450162 /* PrinceCourtServe */,
				849ECD78283E11DE00BCA271 /* AdventaServe */,
				84C98C652850BB590023B0A5 /* YwaitServeDemo */,
				8EB8157828D5D5BF00AA8612 /* AsterServe */,
				8E96A1CC29250E5000777907 /* AlNoorServe */,
				8E41613B2995199300B815B5 /* YwaitServicesServe */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		00E356EC1AD99517003FC87E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
				50E3478A7C954672A8A6A56A /* FuturaPTDemi.otf in Resources */,
				638F04AABEBD40C1AD02D5E7 /* FuturaPTLight.otf in Resources */,
				4F449CA133454372AEDF6CDB /* FuturaPTMedium.otf in Resources */,
				A5F0250EABF74C27BF86D001 /* Gibson-Bold.ttf in Resources */,
				97F9C5252AB14CB3BA759251 /* Gibson-Light.ttf in Resources */,
				84E98EAC282C0674007732AE /* GoogleService-Info.plist in Resources */,
				9C60794A77F447FE833FFA8E /* Gibson-Regular.ttf in Resources */,
				FD989332A0E5494CA6ECD386 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8428E1AF2824D76E00670C94 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8428E1B02824D76E00670C94 /* LaunchScreen.storyboard in Resources */,
				84BB2D0B283E4C2900919830 /* SkillikzServe-Info.plist in Resources */,
				8428E1B12824D76E00670C94 /* Images.xcassets in Resources */,
				8428E1B22824D76E00670C94 /* FuturaPTDemi.otf in Resources */,
				8428E1B32824D76E00670C94 /* FuturaPTLight.otf in Resources */,
				8428E1B42824D76E00670C94 /* FuturaPTMedium.otf in Resources */,
				8428E1B52824D76E00670C94 /* Gibson-Bold.ttf in Resources */,
				8428E1B62824D76E00670C94 /* Gibson-Light.ttf in Resources */,
				84FC76D92824DCE600411C2D /* GoogleService-Info.plist in Resources */,
				8428E1B82824D76E00670C94 /* Gibson-Regular.ttf in Resources */,
				8428E1B92824D76E00670C94 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		849ECD80283E11DE00BCA271 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				849ECD98283E1A5800BCA271 /* GoogleService-Info.plist in Resources */,
				849ECD81283E11DE00BCA271 /* LaunchScreen.storyboard in Resources */,
				849ECD82283E11DE00BCA271 /* Images.xcassets in Resources */,
				849ECD83283E11DE00BCA271 /* FuturaPTDemi.otf in Resources */,
				849ECD84283E11DE00BCA271 /* FuturaPTLight.otf in Resources */,
				849ECD85283E11DE00BCA271 /* FuturaPTMedium.otf in Resources */,
				849ECD87283E11DE00BCA271 /* Gibson-Bold.ttf in Resources */,
				849ECD88283E11DE00BCA271 /* Gibson-Light.ttf in Resources */,
				849ECD8A283E11DE00BCA271 /* Gibson-Regular.ttf in Resources */,
				849ECD8B283E11DE00BCA271 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84C98C6E2850BB590023B0A5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				84C98C6F2850BB590023B0A5 /* LaunchScreen.storyboard in Resources */,
				84C98C702850BB590023B0A5 /* Images.xcassets in Resources */,
				84C98C712850BB590023B0A5 /* FuturaPTDemi.otf in Resources */,
				84C98C722850BB590023B0A5 /* FuturaPTLight.otf in Resources */,
				84C98C8C2850BD040023B0A5 /* GoogleService-Info.plist in Resources */,
				84C98C732850BB590023B0A5 /* FuturaPTMedium.otf in Resources */,
				84C98C742850BB590023B0A5 /* Gibson-Bold.ttf in Resources */,
				84C98C752850BB590023B0A5 /* Gibson-Light.ttf in Resources */,
				84C98C772850BB590023B0A5 /* Gibson-Regular.ttf in Resources */,
				84C98C782850BB590023B0A5 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84D1ABB5282BFEB400450162 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				84D1ABB6282BFEB400450162 /* LaunchScreen.storyboard in Resources */,
				84D1ABB7282BFEB400450162 /* Images.xcassets in Resources */,
				84D1ABB8282BFEB400450162 /* FuturaPTDemi.otf in Resources */,
				84D1ABB9282BFEB400450162 /* FuturaPTLight.otf in Resources */,
				84D1ABBA282BFEB400450162 /* FuturaPTMedium.otf in Resources */,
				84D1ABBB282BFEB400450162 /* Gibson-Bold.ttf in Resources */,
				84D1ABBC282BFEB400450162 /* Gibson-Light.ttf in Resources */,
				84BB2D0C283E4C6600919830 /* GoogleService-Info.plist in Resources */,
				84D1ABBE282BFEB400450162 /* Gibson-Regular.ttf in Resources */,
				84D1ABBF282BFEB400450162 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E4161442995199300B815B5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E41615E2995202800B815B5 /* GoogleService-Info.plist in Resources */,
				8E4161452995199300B815B5 /* LaunchScreen.storyboard in Resources */,
				8E4161462995199300B815B5 /* Images.xcassets in Resources */,
				8E416160299524BA00B815B5 /* YwaitServicesServe-Info.plist in Resources */,
				8E4161472995199300B815B5 /* FuturaPTDemi.otf in Resources */,
				8E4161482995199300B815B5 /* FuturaPTLight.otf in Resources */,
				8E41614A2995199300B815B5 /* FuturaPTMedium.otf in Resources */,
				8E41614B2995199300B815B5 /* Gibson-Bold.ttf in Resources */,
				8E41614C2995199300B815B5 /* Gibson-Light.ttf in Resources */,
				8E41614D2995199300B815B5 /* Gibson-Regular.ttf in Resources */,
				8E41614E2995199300B815B5 /* YwaitServeDemo-Info.plist in Resources */,
				8E41614F2995199300B815B5 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E96A1D429250E5000777907 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E96A1D729250E5000777907 /* Images.xcassets in Resources */,
				8E96A1D829250E5000777907 /* FuturaPTDemi.otf in Resources */,
				8E96A1D929250E5000777907 /* FuturaPTLight.otf in Resources */,
				8E96A1EE2925138700777907 /* GoogleService-Info.plist in Resources */,
				8E96A1DA29250E5000777907 /* AsterServeLaunch Screen.storyboard in Resources */,
				8E96A1DB29250E5000777907 /* FuturaPTMedium.otf in Resources */,
				8E96A1DC29250E5000777907 /* Gibson-Bold.ttf in Resources */,
				8E96A1DD29250E5000777907 /* Gibson-Light.ttf in Resources */,
				8E96A1DE29250E5000777907 /* Gibson-Regular.ttf in Resources */,
				8E96A1F1292518FE00777907 /* AlNoorServeLaunch Screen.storyboard in Resources */,
				8E96A1EF2925138700777907 /* AlNoorServe-Info.plist in Resources */,
				8E96A1DF29250E5000777907 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8EB8158028D5D5BF00AA8612 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E60D93228DC4B7500F9A92F /* GoogleService-Info.plist in Resources */,
				8EB8159A28D5D89C00AA8612 /* AsterServe-Info.plist in Resources */,
				8EB8158228D5D5BF00AA8612 /* Images.xcassets in Resources */,
				8EB8158328D5D5BF00AA8612 /* FuturaPTDemi.otf in Resources */,
				8EB8158428D5D5BF00AA8612 /* FuturaPTLight.otf in Resources */,
				8EB8159C28D5D90600AA8612 /* AsterServeLaunch Screen.storyboard in Resources */,
				8EB8158628D5D5BF00AA8612 /* FuturaPTMedium.otf in Resources */,
				8EB8158828D5D5BF00AA8612 /* Gibson-Bold.ttf in Resources */,
				8EB8158928D5D5BF00AA8612 /* Gibson-Light.ttf in Resources */,
				8EB8158A28D5D5BF00AA8612 /* Gibson-Regular.ttf in Resources */,
				8EB8158B28D5D5BF00AA8612 /* Gibson-SemiBold.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		04035A10897249A934DAA88C /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		05B1F93F5A81C79B537B7A20 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		0AE2A575F0F33C0843EB5BE8 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)",
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | /usr/bin/head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    if ! python3 --version >/dev/null 2>&1; then echo \"python3 not found, firebase.json file processing error.\" && exit 1; fi\n    _JSON_OUTPUT_BASE64=$(python3 -c 'import json,sys,base64;print(base64.b64encode(bytes(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"', '\"'rb'\"').read())['${_JSON_ROOT}']), '\"'utf-8'\"')).decode())' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.app_data_collection_default_enabled\n  _APP_DATA_COLLECTION_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_data_collection_default_enabled\")\n  if [[ $_APP_DATA_COLLECTION_ENABLED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseDataCollectionDefaultEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_DATA_COLLECTION_ENABLED\")\")\n  fi\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.analytics_collection_deactivated\n  _ANALYTICS_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_collection_deactivated\")\n  if [[ $_ANALYTICS_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_DEACTIVATED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_DEACTIVATED\")\")\n  fi\n\n  # config.analytics_idfv_collection_enabled\n  _ANALYTICS_IDFV_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_idfv_collection_enabled\")\n  if [[ $_ANALYTICS_IDFV_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_IDFV_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_IDFV_COLLECTION\")\")\n  fi\n\n  # config.analytics_default_allow_ad_personalization_signals\n  _ANALYTICS_PERSONALIZATION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_personalization_signals\")\n  if [[ $_ANALYTICS_PERSONALIZATION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_PERSONALIZATION_SIGNALS\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_PERSONALIZATION\")\")\n  fi\n\n  # config.analytics_registration_with_ad_network_enabled\n  _ANALYTICS_REGISTRATION_WITH_AD_NETWORK=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_registration_with_ad_network_enabled\")\n  if [[ $_ANALYTICS_REGISTRATION_WITH_AD_NETWORK ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_REGISTRATION_WITH_AD_NETWORK_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_REGISTRATION_WITH_AD_NETWORK\")\")\n  fi\n\n  # config.google_analytics_automatic_screen_reporting_enabled\n  _ANALYTICS_AUTO_SCREEN_REPORTING=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_automatic_screen_reporting_enabled\")\n  if [[ $_ANALYTICS_AUTO_SCREEN_REPORTING ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAutomaticScreenReportingEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_SCREEN_REPORTING\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_collection_deactivated\n  _PERF_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_collection_deactivated\")\n  if [[ $_PERF_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_deactivated\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_DEACTIVATED\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.in_app_messaging_auto_colllection_enabled\n  _FIAM_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"in_app_messaging_auto_collection_enabled\")\n  if [[ $_FIAM_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseInAppMessagingAutomaticDataCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_FIAM_AUTO_INIT\")\")\n  fi\n\n  # config.app_check_token_auto_refresh\n  _APP_CHECK_TOKEN_AUTO_REFRESH=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_check_token_auto_refresh\")\n  if [[ $_APP_CHECK_TOKEN_AUTO_REFRESH ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAppCheckTokenAutoRefreshEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_CHECK_TOKEN_AUTO_REFRESH\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		103F797F1328741CF363ED1A /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		1BEC3827995C7054CCF00120 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe/Pods-YwaitServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		4A8B72EABE036E3A40D05198 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-AdventaServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		5C3E8EF3E37CF109B455F9B8 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeDemo/Pods-YwaitServe-YwaitServeDemo-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		5D8943F32A5149EEE2C40D57 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8428E1A82824D76E00670C94 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-SkillikzServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		8428E1A92824D76E00670C94 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		8428E1BA2824D76E00670C94 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		8428E1BB2824D76E00670C94 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8428E1BC2824D76E00670C94 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-SkillikzServe/Pods-YwaitServe-SkillikzServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		849ECD7A283E11DE00BCA271 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		849ECD8C283E11DE00BCA271 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		84A900056343E649610907C6 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-YwaitServeTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		84C98C672850BB590023B0A5 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		84C98C792850BB590023B0A5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		84D1ABAE282BFEB400450162 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-PrinceCourtServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		84D1ABAF282BFEB400450162 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		84D1ABC0282BFEB400450162 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		84D1ABC1282BFEB400450162 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		84D1ABC2282BFEB400450162 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-PrinceCourtServe/Pods-YwaitServe-PrinceCourtServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8E41613C2995199300B815B5 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-YwaitServicesServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		8E41613D2995199300B815B5 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		8E4161502995199300B815B5 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		8E4161512995199300B815B5 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8E4161522995199300B815B5 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServicesServe/Pods-YwaitServe-YwaitServicesServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8E96A1CD29250E5000777907 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-AlNoorServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		8E96A1CE29250E5000777907 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		8E96A1E029250E5000777907 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		8E96A1E129250E5000777907 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8E96A1E229250E5000777907 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AlNoorServe/Pods-YwaitServe-AlNoorServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8EB8157928D5D5BF00AA8612 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-AsterServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		8EB8157A28D5D5BF00AA8612 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		8EB8158C28D5D5BF00AA8612 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		8EB8158D28D5D5BF00AA8612 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		8EB8158E28D5D5BF00AA8612 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AsterServe/Pods-YwaitServe-AsterServe-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		92A0EF622B722C294E91A91A /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-YwaitServeTests/Pods-YwaitServe-YwaitServeTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		9A233F99518EC2BA9CAC8BE9 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-YwaitServeDemo-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		CFDE20BE9B5F8E97EC7443DE /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-YwaitServe-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D86FC5B1BB02CE5A4E652B7D /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-YwaitServe-AdventaServe/Pods-YwaitServe-AdventaServe-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		FBCE7694DDC5DCB1EE35C404 /* [CP-User] [RNFB] Crashlytics Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}",
				"$(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)",
			);
			name = "[CP-User] [RNFB] Crashlytics Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\nif [[ ${PODS_ROOT} ]]; then\n  echo \"info: Exec FirebaseCrashlytics Run from Pods\"\n  \"${PODS_ROOT}/FirebaseCrashlytics/run\"\nelse\n  echo \"info: Exec FirebaseCrashlytics Run from framework\"\n  \"${PROJECT_DIR}/FirebaseCrashlytics.framework/run\"\nfi\n";
		};
		FD10A7F022414F080027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		00E356EA1AD99517003FC87E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				00E356F31AD99517003FC87E /* YwaitServeTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8428E1AA2824D76E00670C94 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8428E1AB2824D76E00670C94 /* AppDelegate.mm in Sources */,
				8428E1AC2824D76E00670C94 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		849ECD7B283E11DE00BCA271 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				849ECD7C283E11DE00BCA271 /* AppDelegate.mm in Sources */,
				849ECD7D283E11DE00BCA271 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84C98C682850BB590023B0A5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				84C98C692850BB590023B0A5 /* AppDelegate.mm in Sources */,
				84C98C6A2850BB590023B0A5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		84D1ABB0282BFEB400450162 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				84D1ABB1282BFEB400450162 /* AppDelegate.mm in Sources */,
				84D1ABB2282BFEB400450162 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E41613E2995199300B815B5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E41613F2995199300B815B5 /* AppDelegate.mm in Sources */,
				8E4161402995199300B815B5 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E96A1CF29250E5000777907 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E96A1D029250E5000777907 /* AppDelegate.mm in Sources */,
				8E96A1D129250E5000777907 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8EB8157B28D5D5BF00AA8612 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8EB8157C28D5D5BF00AA8612 /* AppDelegate.mm in Sources */,
				8EB8157D28D5D5BF00AA8612 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00E356F51AD99517003FC87E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 13B07F861A680F5B00A75B9A /* YwaitServe */;
			targetProxy = 00E356F41AD99517003FC87E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00E356F61AD99517003FC87E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C1D1CE2BA5DDF5D804B7D5E8 /* Pods-YwaitServe-YwaitServeTests.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = YwaitServeTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/YwaitServe.app/YwaitServe";
			};
			name = Debug;
		};
		00E356F71AD99517003FC87E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 22515B7A68A70CE579006CBF /* Pods-YwaitServe-YwaitServeTests.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				COPY_PHASE_STRIP = NO;
				INFOPLIST_FILE = YwaitServeTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/YwaitServe.app/YwaitServe";
			};
			name = Release;
		};
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8651D507FEF77AEDC4758554 /* Pods-YwaitServe.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 10;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = YwaitServe/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.stackontechnologies.ywaitadmin;
				PRODUCT_NAME = YwaitServe;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8E7A98761E5931396AF5F3BF /* Pods-YwaitServe.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 10;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = YwaitServe/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.stackontechnologies.ywaitadmin;
				PRODUCT_NAME = YwaitServe;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		8428E1C02824D76E00670C94 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C70903A881C1EC4C113F71D4 /* Pods-YwaitServe-SkillikzServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = SkillikzServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 3;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "$(SRCROOT)/SkillikzServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.skillikz.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		8428E1C12824D76E00670C94 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B09666E1863B3DC64332C4BD /* Pods-YwaitServe-SkillikzServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = SkillikzServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 3;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "$(SRCROOT)/SkillikzServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.skillikz.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		849ECD90283E11DE00BCA271 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2217BD70E912F54BB30CF34A /* Pods-YwaitServe-AdventaServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AdventaServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 3;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "$(SRCROOT)/AdventaServe/AdventServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.adventaserve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		849ECD91283E11DE00BCA271 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A7DEB930DBE58F27FF3EDFFF /* Pods-YwaitServe-AdventaServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AdventaServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 3;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "$(SRCROOT)/AdventaServe/AdventServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.adventaserve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		84C98C7F2850BB590023B0A5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D0ADF7233E84FF0DCE557C0A /* Pods-YwaitServe-YwaitServeDemo.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 12;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "$(SRCROOT)/YwaitServeDemo/YwaitServeDemo-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Ywait Serve Demo";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.serve.demo;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		84C98C802850BB590023B0A5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 31C563900CFAC87659FC3AE4 /* Pods-YwaitServe-YwaitServeDemo.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 12;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "$(SRCROOT)/YwaitServeDemo/YwaitServeDemo-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Ywait Serve Demo";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.serve.demo;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		84D1ABC6282BFEB400450162 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0496FDFB58FDAE7BEF6A2BDA /* Pods-YwaitServe-PrinceCourtServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = PrinceCourtAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "$(SRCROOT)/PrinceCourtServe/PrinceCourtServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.princecourtserve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		84D1ABC7282BFEB400450162 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 5D872308239F1D15ACCC055C /* Pods-YwaitServe-PrinceCourtServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = PrinceCourtAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "$(SRCROOT)/PrinceCourtServe/PrinceCourtServe-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.princecourtserve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		8E4161542995199300B815B5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0CD9C929F4283B8BE5E7D00B /* Pods-YwaitServe-YwaitServicesServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/YwaitServicesServe/YwaitServicesServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Ywait Services Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.services.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		8E4161552995199300B815B5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0FE9CBBF16A4C61A02748E02 /* Pods-YwaitServe-YwaitServicesServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/YwaitServicesServe/YwaitServicesServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Ywait Services Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.services.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		8E96A1E429250E5000777907 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 756AE7C95AD2F31163ECCC89 /* Pods-YwaitServe-AlNoorServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AlNoorServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 2;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/AlNoorServe/AlNoorServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Al Noor Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.alNoor.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		8E96A1E529250E5000777907 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 700F551D844A3743B10D3296 /* Pods-YwaitServe-AlNoorServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AlNoorServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 2;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/AlNoorServe/AlNoorServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Al Noor Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.alNoor.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		8EB8159028D5D5BF00AA8612 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2B6A4CD5D4AA86B536335BD6 /* Pods-YwaitServe-AsterServe.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AsterServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 5;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/AsterServe/AsterServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Aster Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.aster.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		8EB8159128D5D5BF00AA8612 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 87D8177AF84CE0D6251A35D4 /* Pods-YwaitServe-AsterServe.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AsterServeAppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = YwaitServe/YwaitServe.entitlements;
				CURRENT_PROJECT_VERSION = 5;
				DEVELOPMENT_TEAM = LEC5QRE74X;
				INFOPLIST_FILE = "/Users/stackon/Documents/works/sudhin/ywait/YwaitServe/ios/AsterServe/AsterServe-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Aster Serve";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.ywait.aster.serve;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "YwaitServeTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00E356F61AD99517003FC87E /* Debug */,
				00E356F71AD99517003FC87E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "YwaitServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "YwaitServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8428E1BF2824D76E00670C94 /* Build configuration list for PBXNativeTarget "SkillikzServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8428E1C02824D76E00670C94 /* Debug */,
				8428E1C12824D76E00670C94 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		849ECD8F283E11DE00BCA271 /* Build configuration list for PBXNativeTarget "AdventaServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				849ECD90283E11DE00BCA271 /* Debug */,
				849ECD91283E11DE00BCA271 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		84C98C7E2850BB590023B0A5 /* Build configuration list for PBXNativeTarget "YwaitServeDemo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				84C98C7F2850BB590023B0A5 /* Debug */,
				84C98C802850BB590023B0A5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		84D1ABC5282BFEB400450162 /* Build configuration list for PBXNativeTarget "PrinceCourtServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				84D1ABC6282BFEB400450162 /* Debug */,
				84D1ABC7282BFEB400450162 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8E4161532995199300B815B5 /* Build configuration list for PBXNativeTarget "YwaitServicesServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8E4161542995199300B815B5 /* Debug */,
				8E4161552995199300B815B5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8E96A1E329250E5000777907 /* Build configuration list for PBXNativeTarget "AlNoorServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8E96A1E429250E5000777907 /* Debug */,
				8E96A1E529250E5000777907 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8EB8158F28D5D5BF00AA8612 /* Build configuration list for PBXNativeTarget "AsterServe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8EB8159028D5D5BF00AA8612 /* Debug */,
				8EB8159128D5D5BF00AA8612 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
